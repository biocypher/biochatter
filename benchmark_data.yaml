# Top-level keys: benchmark modules
# Values: list of dictionaries, each containing a test case
#
# Test case keys:
# - input (for creating the test)
# - expected (for asserting ourcomes and generating a score)
# - case (for categorizing the test case)
#
# If any input is a dictionary itself, it will be expanded into separate test
# cases, using the top-level key to create a concatenated test case purpose.

biocypher_query_generation:
  # test ability to create a simple cypher query
  - case: simple
    input:
      kg_schema: gene_kg
      prompt: What is the name of the disease with ICD10 code 'E10'?
      language: Cypher
    expected:
      entities: ["Disease"]
      relationships: []
      relationship_labels: {}
      properties:
        Disease: ["name", "ICD10"]
      parts_of_query:
        [
          "^MATCH",
          "RETURN",
          "([a-zA-Z]*:Disease)",
          "WHERE [a-zA-Z]*\\.ICD10|{ICD10:",
        ]
  # test additional simple cypher query
  - case: simple2
    input:
      kg_schema: gene_kg
      prompt: What is the name of the gene with ID '6091'?
      language: Cypher
    expected:
      entities: ["Disease"]
      relationships: []
      relationship_labels: {}
      properties:
        Gene: ["name", "INSR"]
      parts_of_query:
        [
          "^MATCH",
          "RETURN",
          "([a-zA-Z]*:Gene)",
          "WHERE [a-zA-Z]*\\.id|{id:",
        ]
  # test additional simple SQL query
  - case: simple2_SQL
    input:
      kg_schema: gene_kg
      prompt: What is the name of the gene with ID '6091'?
      language: SQL
    expected:
      entities: ["Disease"]
      relationships: []
      relationship_labels: {}
      properties:
        Gene: ["name", "INSR"]
      parts_of_query:
        [
          "^SELECT",
          "FROM",
          "([a-zA-Z]*:Gene)",
          "WHERE [a-zA-Z]*\\.id|{id:",
        ]
  # test ability to create a simple cypher query
  - case: simple_gene_expression
    input:
      kg_schema: gene_kg
      prompt: "What is the expression level of the gene 'TP53' in cell type 'Hepatocyte'?"
      language: Cypher
    expected:
      entities: ["Gene", "CellType"]
      relationships: ["GeneExpressedInCellType"]
      relationship_labels:
        GENE_EXPRESSED_IN_CELL_TYPE:
          source: Gene
          target: CellType
      properties:
        Gene: ["name"]
        Cell Type: ["cell_type_name"]
      parts_of_query:
        [
          "^MATCH",
          "RETURN",
          "([a-zA-Z]*:Gene)",
          "([a-zA-Z]*:CellType)",
          "([a-zA-Z]*)?:GENE_EXPRESSED_IN_CELL_TYPE]",
          "WHERE [a-zA-Z]*\\.TP53|{TP53:",
          "\\)<-\\[([a-zA-Z]*)?:GENE_EXPRESSED_IN_CELL_TYPE]-|-\\[([a-zA-Z]*)?:GENE_EXPRESSED_IN_CELL_TYPE]->\\(([a-zA-Z]*:Cell Type)\\)",
        ]
  # test cypher query with single-word entities
  - case: single_word
    input:
      kg_schema: gene_kg
      prompt: Which genes are associated with mucoviscidosis?
      language: Cypher
    expected:
      entities: ["Gene", "Disease"]
      relationships: ["GeneToPhenotypeAssociation"]
      relationship_labels:
        PERTURBED:
          source: Disease
          target: ["Protein", "Gene"]
      properties:
        Disease: ["name", "ICD10", "DSM5"]
        Gene: ["id", "name"]
        GeneToPhenotypeAssociation: ["score", "source", "evidence"]
      parts_of_query:
        [
          "^MATCH",
          "RETURN",
          "([a-zA-Z]*:Gene)",
          "([a-zA-Z]*:Disease)",
          "([a-zA-Z]*)?:PERTURBED]",
          "[Mm]ucoviscidosis",
          "\\(.*:Gene\\)<-\\[:PERTURBED\\]-|-\\[:PERTURBED\\]->\\(.*:Gene\\)",
          "WHERE [a-zA-Z]*\\.name|{name:",
        ]
  # test cypher query with multi-word entities
  - case: multi_word
    input:
      kg_schema: gene_kg
      prompt: Which genes are expressed in fibroblasts?
      language: Cypher
    expected:
      entities: ["Gene", "CellType"]
      relationships: ["GeneExpressedInCellType"]
      relationship_labels:
        GENE_EXPRESSED_IN_CELL_TYPE:
          source: Gene
          target: CellType
      properties:
        CellType: cell_type_name
        Gene: ["id", "name"]
        GeneExpressedInCellType: expression_level
      parts_of_query:
        [
          "^MATCH",
          "RETURN",
          "([a-zA-Z]*:Gene)",
          "([a-zA-Z]*:CellType.*)",
          "([a-zA-Z]*)?:GENE_EXPRESSED_IN_CELL_TYPE]",
          "[Ff]ibroblast",
          "\\(.*:Gene\\)-\\[:GENE_EXPRESSED_IN_CELL_TYPE\\]->\\(.*:CellType.*\\)|\\(.*:CellType.*\\)<-\\[:GENE_EXPRESSED_IN_CELL_TYPE\\]-\\(.*:Gene\\)",
          "WHERE [a-zA-Z]*\\.cell_type_name|{cell_type_name:",
        ]

  # test more complex cypher query
  - case: complex
    input:
      kg_schema: gene_kg
      prompt: Which proteins are associated with the disease having ICD10 code 'E10', what are their scores, and what is the gene related to these proteins?
      language: Cypher
    expected:
      entities: ["Protein", "Disease", "Gene"]
      relationships: ["GeneToPhenotypeAssociation", "GeneToProteinAssociation"]
      relationship_labels:
        PERTURBED_IN:
          source: Protein
          target: Disease
        GeneToProteinAssociation:
          source: Gene
          target: Protein
      properties:
        Disease: ["name", "ICD10"]
        Protein: ["name", "score"]
        Gene: ["name", "score"]
        GeneToPhenotypeAssociation: ["score", "source", "evidence"]
        GeneToProteinAssociation: ["score"]
      parts_of_query:
        [
          "^MATCH",
          "RETURN",
          "([a-zA-Z]*:Protein)",
          "([a-zA-Z]*:Disease)",
          "([a-zA-Z]*:Gene)",
          "([a-zA-Z]*)?:PERTURBED_IN]",
          "([a-zA-Z]*)?:GeneToProteinAssociation]",
          "WHERE [a-zA-Z]*\\.ICD10|{ICD10:",
          "\\)<-\\[([a-zA-Z]*)?:PERTURBED_IN]-|-\\[([a-zA-Z]*)?:PERTURBED_IN]->\\(([a-zA-Z]*:Disease)",
          "\\(([a-zA-Z]*(:Protein)?)\\)<-\\[([a-zA-Z]*)?:GeneToProteinAssociation]-|-\\[([a-zA-Z]*)?:GeneToProteinAssociation]->\\(([a-zA-Z]*(:Protein)?)\\)",
        ]
  # test another complex query
  - case: complex2
    input:
      kg_schema: gene_kg
      prompt: What are the cell types where the gene 'INSR' is expressed, and what are their medium and organism?
      language: Cypher
    expected:
      entities: ["Gene", "CellType"]
      relationships: ["GeneExpressedInCellType"]
      relationship_labels:
        GENE_EXPRESSED_IN_CELL_TYPE:
          source: Gene
          target: CellType
      properties:
        Gene: ["name"]
        cell type: ["cell_type_name", "medium", "organism"]
      parts_of_query:
        [
          "^MATCH",
          "RETURN",
          "([a-zA-Z]*:Gene)",
          "([a-zA-Z]*:CellType)",
          "([a-zA-Z]*)?:GENE_EXPRESSED_IN_CELL_TYPE]",
          "WHERE [a-zA-Z]*\\.INSR|{INSR:",
          "\\)<-\\[([a-zA-Z]*)?:GENE_EXPRESSED_IN_CELL_TYPE]-|-\\[([a-zA-Z]*)?:GENE_EXPRESSED_IN_CELL_TYPE]->\\(([a-zA-Z]*:Cell Type)\\)",
        ]
  # test another complex cypher query (not final)
  - case: complex3
    input:
      kg_schema: gene_kg
      prompt: Which proteins are interacting with proteins that are associated with the disease having ICD10 code 'E10', what are their scores, and what is the gene related to these proteins?
      language: Cypher
    expected:
      entities: ["Protein", "Disease", "Gene"]
      relationships: ["GeneToPhenotypeAssociation", "GeneToProteinAssociation", "PostTranslationalInteraction"]
      relationship_labels:
        PERTURBED_IN:
          source: Protein
          target: Disease
        GeneToProteinAssociation:
          source: Gene
          target: Protein
        PostTranslationalInteraction:
          source: Protein
          target: Protein
      properties:
        Disease: ["name", "ICD10"]
        Protein: ["name", "score"]
        Gene: ["name", "score"]
        GeneToPhenotypeAssociation: ["score", "source", "evidence"]
        GeneToProteinAssociation: ["score"]
      parts_of_query:
        [
          "^MATCH",
          "RETURN",
          "([a-zA-Z]*:Protein)",
          "([a-zA-Z]*:Disease)",
          "([a-zA-Z]*:Gene)",
          "([a-zA-Z]*)?:PERTURBED_IN]",
          "([a-zA-Z]*)?:GeneToProteinAssociation]",
          "WHERE [a-zA-Z]*\\.ICD10|{ICD10:",
          "\\)<-\\[([a-zA-Z]*)?:PERTURBED_IN]-|-\\[([a-zA-Z]*)?:PERTURBED_IN]->\\(([a-zA-Z]*:Disease)",
          "\\(([a-zA-Z]*(:Protein)?)\\)<-\\[([a-zA-Z]*)?:GeneToProteinAssociation]-|-\\[([a-zA-Z]*)?:GeneToProteinAssociation]->\\(([a-zA-Z]*(:Protein)?)\\)",
        ]

rag_interpretation:
  # test simple irrelevance judgement
  - case: explicit_relevance_no
    input:
      prompt: Which molecular pathways are associated with cancer?
      system_messages:
        simple:
          [
            "You will receive a text fragment to help answer the user's question. Your task is to judge this text fragment for relevance to the user's question, and return either 'yes' or 'no'! Here is the fragment: ",
            "The earth is a globe.",
          ]
        more_explicit:
          [
            "You will receive a text fragment to help answer the user's question. Your task is to judge this text fragment for relevance to the user's question, and return either 'yes' or 'no'; only respond with one word, do not offer explanation or justification! Here is the fragment: ",
            "The earth is a globe.",
          ]
        repeat_instruction:
          [
            "You will receive a text fragment to help answer the user's question. You should only respond with 'yes' or 'no' without additional words. Your task is to judge this text fragment for relevance to the user's question, and return either 'yes' or 'no'; only respond with one word, do not offer explanation or justification! Here is the fragment: ",
            "The earth is a globe.",
          ]
    expected:
      answer: "no"

  # test simple relevance judgement
  - case: explicit_relevance_yes
    input:
      prompt: Which molecular pathways are associated with cancer?
      system_messages:
        [
          "You will receive a text fragment to help answer the user's question. Your task is to judge this text fragment for relevance to the user's question, and return either 'yes' or 'no'; only respond with one word, do not offer explanation or justification! Here is the fragment: ",
          "The EGFR pathway is deregulated in a number of cancers.",
        ]
    expected:
      answer: "yes"

  # test capability to evaluate response to relevance question negatively
  - case: explicit_evaluation_no
    input:
      prompt: "I'm sorry, but the given text fragments do not provide any relevant information about molecular pathways associated with cancer."
      system_messages:
        [
          "You will receive a statement as an answer to this question: ",
          "Which molecular pathways are associated with cancer? ",
          "If the statement is an answer to the question, please type 'answer'. ",
          "If the statement declines to answer to the question or apologises, giving the reason of lack of relevance of the given text fragments, please type 'decline'. ",
          "Do not type anything except these two options. Here is the statement: ",
        ]
    expected:
      answer: "decline"

  # test capability to evaluate response to relevance question positively
  - case: explicit_evaluation_yes
    input:
      prompt: "There are several molecular pathways that are associated with cancer, for instance TP53, BRCA1, the STAT inflammatory pathway, and the EGFR pathway."
      system_messages:
        [
          "You will receive a statement as an answer to this question: ",
          "Which molecular pathways are associated with cancer? ",
          "If the statement is an answer to the question, please type 'answer'. ",
          "If the statement declines to answer to the question or apologises, giving the reason of lack of relevance of the given text fragments, please type 'decline'. ",
          "Do not type anything except these two options. Here is the statement: ",
        ]
    expected:
      answer: "answer"

  # test complex (implicit) irrelevance judgement
  - case: implicit_relevance_no
    input:
      prompt: Which molecular pathways are associated with cancer?
      system_messages:
        [
          "You will receive a number of text fragments to help answer the user's question. Your task is to use the information in these text fragments for answering the user's question, if they are relevant. Here are the fragments: ",
          "The earth is a globe.",
          "The Human is the most endurant mammal.",
          "America was discovered by Columbus.",
          "The wavelength of red light is longer than that of blue light.",
        ]
    expected:
      behaviour: "decline"

  # test complex (implicit) relevance judgement
  - case: implicit_relevance_yes
    input:
      prompt: Which molecular pathways are associated with cancer?
      system_messages:
        [
          "You will receive a number of text fragments to help answer the user's question. Your task is to use the information in these text fragments for answering the user's question, if they are relevant. Here are the fragments: ",
          "TP53, when mutated, often is a driving mutation in cancer.",
          "BRCA1 is an important genetic regulator of breast cancer.",
          "The STAT inflammatory pathway is often perturbed in cancers.",
          "The EGFR pathway can lead to excessive growth of cancer cells.",
        ]
    expected:
      behaviour: "answer"

text_extraction:
  - case: source_data_extraction
    input:
      query:
        entity: "What is the assayed/measured entity?"
        intervention: "What was the intervention/controlled variable in this experiment?"
        context: "In what kind of cell/tissue/organism/subcellular component was the experiment performed?"
        assay: "What kind of experimental assay was used for this experiment?"
        experiment_yes_or_no: "Does the legend describe an experiment or not?"
        ncbi_link: "Can you link the identified genes to their NCBI gene identifiers?"
        hypothesis: "Can you formulate the hypothesis that this experiment has tested."
        disease: "Is there any disease term mentioned, or can be infered, in the figure legend?"
        stats: "What was the statistical method to validate the significance of the experimental result?"
        significance: "What is the significance level of the experiment?"
        chemical: "Are there any chemical compounds or small molecules mentioned?"
      caption:
        3d_sim: "(A) 3D-SIM images of HeLa control, PINK1-/- and FBXO7-/- cell lines after AO-induced mitophagy. Cells were stained for nuclear DNA (DAPI), mitochondria (HSP60) and pUb. Zoom-ins of regions of interested are enlarged in the middle panel. 3D-surface renderings of insets are shown on the right. Scale bar = 5 µm or 1 µm. (B,C) Evaluation of 3D-SIM images from HeLa datasets. The changes in pUb volume and minimal distances between mitochondria and pUb after mitophagy-induction are plotted. Error bars depict S.D. from 8-14 measured cells per condition. Two-way ANOVA with multiple comparisons; p(****)<0.0001."
        flow_cyto: "(B) Mean Acidic:Neutral mtKeima per-cell ratios measured by flow cytometry for HeLa cells expressing Parkin ndicating the number of hours treated with AO (Antimycin A (5 µM) and Oligomycin (10 µM)) or three hours with 25 nM BafilomycinA (BafA). Error bars depict S.D. from biological triplicate measurements from three independent clones. Two-way ANOVA with multiple comparisons; p(****)<0.0001."
        western: "(E) Western blot of cell lysate (Lys) from 2x105 cells, 10k and 200k secreted by 20x106 of 10 tumor cell lines (EO771, TS/A, LLC1, KP, B16F10, MCA101, MB49, Raw264.7, 4T1 and MutuDC) and 2 non-tumoral fibroblast cell lines (Pfa1 and Mus Dunni), showing hybridization with antibodies against env (top) and gag (middle) viral proteins and total proteins (bottom). Gag is observed with different sizes, especially the full-length Pr65 (blue circle), and the mature cleaved p30 (blue cross) forms."
      format:
        entity: "List of comma separated entities. 'None' if no entity is found."
        intervention: "List of comma separated entities. 'None' if no intervention / controlled entities are found."
        context: "Line separated asignations following the example: cell_type: Cell_type_name1, cell_type_2 \n organism: Organism_1, organism_2 \n tissue: tissue_name \n cell_line: cell_line_name \n subcellular: subcell_component. Return None for the fields with no information in the caption."
        assay: "List of comma separated experimental assays. 'None' if no assay is found."
        experiment_yes_or_no: "Return 'Yes' if the legend describes an experiment, 'No' if not."
        ncbi_link: "For each identified gene, generate a line with: 'gene_name': 'NCBI gene identifier'. Return 'None' if no genes are identified."
        hypothesis: "One hypothesis per line as in the example: Entity 1 --> Entity 2 \n Entity 3 --> Entity 4"
        disease: "Comma separated list with the mentioned diseases, 'None' list if no disease is mentioned."
        stats: "Simple string. 'None' if no information is found."
        significance: "The statistical significance level. 'None' if no information is found"
        chemical: "List of comma separated chemicals. 'None' if no chemical compound or molecule is found."
      system_messages:
        simple: |-
          You are a skillful scientist who wants to curate figure legends. You will receive a user query consisting of a figure legend and a query, that you must answer based on the figure legend. The input format will be: FIGURE CAPTION: {{figure legend}} ##\n\n## QUERY: {{query}} ##\n\n## ANSWER FORMAT: {{format}}.
          Submit your answer EXTRICTLY in the format specified by {{format}}.

        detailed_description: |-
          You are a skillful scientist who wants to curate figure legends. You will receive a user query consisting of a figure legend and a query, that you must answer based on the figure legend. The input format will be: FIGURE CAPTION: {{figure legend}} ##\n\n## QUERY: {{query}} ##\n\n## ANSWER FORMAT: {{format}}.
          Submit your answer EXTRICTLY in the format specified by {{format}}.

          To correctly answer the query, follow the guidelines described next:
          Experiments in cell and molecular biology involve the empirical manipulation, observation and description of biological entities. Biological and chemical entities can be entire organisms, a subset of their constituents or part of the experimental milieu.

          Examples of entities:
          - calcium, oligomycin, p53, mitochondria, liver, mus musculus, synapse, HeLa cells are entities.

          Examples of no entities:
          - The cell cycle, apoptosis, wound healing or type II diabetes are not entities.

          Entities are assigned to one of seven types spanning successive levels of biological organisations. Each type is mutually exclusive. The seven types are: Small molecules, genes, proteins, cellular components, cell types and cell lines, tissues and organs, organisms and species.

          Example of entity classification:
          - ATP is a small molecule
          - creb1 is a gene
          - CREB1 is a protein
          - the Golgi apparatus is a cellular component
          - HEK293 cells is a cell line
          - the retina is a tissue
          - Saccharomyces cerevisiae and PhiX174 are organisms.

          If an entity does not fit any of the predefined types, the undefined type is assigned.
          In general, generic terms referring to broad classes of biological components (eg 'proteins', 'cells', 'animals') SHOULD NOT be tagged unless they refer to the object of an assay.

          You should also identify experimental assays. Some examples of these are:
          - immunoblot
          - western blot
          - staining
          - gene expression
          - flow cytometry (FACS)

          Entity roles:

          ​​Biological entities listed in the caption of a figure each play a different role in the experimental design: some components are altered in a controlled manner, others remain untouched by the experimenter, and some are directly or indirectly assayed to perform measurements or observations. Accordingly, the following roles are defined:

          - Biological component
          - Assayed component
          - Controlled variable

          Assayed component:
          An assayed component is the component that is measured or observed.

          Example for assayed component:
          - The proteins detected on a Western blot are the assayed components with the exception of the loading control, if any, which is a normalizing component.

          Controlled variables:
          A controlled variable (also called perturbation, intervention, manipulation, alteration or independent variable) is a component that is experimentally altered. A controlled variable MUST be targeted and MUST be controlled. This implies that the experiment MUST involve the same experimental system across experimental groups and MUST involve a comparison between several experimental groups to test whether the controlled variable causes an effect on the assayed component.

          Example for controlled variable:
          - The function of the gene creb1 can be investigated by comparing creb1 wt (control group) to creb1-/- knockout (test group) mice; in this experiment, creb1 is the controlled variable. If, and only if, it is appropriately controlled, the purpose of such an experiment is to infer a cause-and-effect relationship.
          - If cells are treated with different doses of the PKA inhibitor H89, H89 is tagged as the controlled variable.
          - In a siRNA-mediated knock down experiment, the gene targeted by the siRNA is tagged as a controlled variable.

          Biological component:
          A biological component is a generic category for any experimentally relevant component which does not fit any of the other defined roles. Often it will contain the organism, the cell, or a generic treatment that is present across all conditions.
        few_shot: |-
          You are a skillful scientist who wants to curate figure legends. You will receive a user query consisting of a figure legend and a query, that you must answer based on the figure legend. The input format will be: FIGURE CAPTION: {{figure legend}} ##\n\n## QUERY: {{query}} ##\n\n## ANSWER FORMAT: {{format}}.
          Submit your answer EXTRICTLY in the format specified by {{format}}. You will receive a series of examples below, showing your expected behavior. At the end of the prompt, the user will input her example. Please provide the required answers.

          FIGURE CAPTION: (B) Confocal microscopy of EO771-myr/palm-mCherry cells showing DAPI in blue and mCherry in red, CD9 in green and CD63 in magenta (overlay and close-ups). ##

          ## QUERY: What is the assayed/measured entity? ##

          ## ANSWER FORMAT: List of comma separated entities. 'None' if no entity is found.

          ANSWER: CD63, CD9

          FIGURE CAPTION: (B) Confocal microscopy of EO771-myr/palm-mCherry cells showing DAPI in blue and mCherry in red, CD9 in green and CD63 in magenta (overlay and close-ups). ##

          ## QUERY: What was the intervention/controlled variable in this experiment? ##

          ## ANSWER FORMAT: List of comma separated entities. 'None' if no intervention / controlled entities are found.

          ANSWER: None

          FIGURE CAPTION: (B) Confocal microscopy of EO771-myr/palm-mCherry cells showing DAPI in blue and mCherry in red, CD9 in green and CD63 in magenta (overlay and close-ups). ##

          ## QUERY: In what kind of cell/tissue/organism/subcellular component was the experiment performed? ##

          ## ANSWER FORMAT: Line separated asignations following the example: cell_type: Cell_type_name1, cell_type_2 \n organism: Organism_1, organism_2 \n tissue: tissue_name \n cell_line: cell_line_name \n subcellular: subcell_component. Return None for the fields with no information in the caption.

          ANSWER:
          cell_type: None
          organism: None
          tissue: None
          cell_line: EO771-myr/palm-mCherry
          subcellular: None

          FIGURE CAPTION: (B) Confocal microscopy of EO771-myr/palm-mCherry cells showing DAPI in blue and mCherry in red, CD9 in green and CD63 in magenta (overlay and close-ups). ##

          ## QUERY: What kind of experimental assay was used for this experiment? ##

          ## ANSWER FORMAT: List of comma separated experimental assays. 'None' if no assay is found.

          ANSWER: Confocal microscopy

          FIGURE CAPTION: (B) Confocal microscopy of EO771-myr/palm-mCherry cells showing DAPI in blue and mCherry in red, CD9 in green and CD63 in magenta (overlay and close-ups). ##

          ## QUERY: Does the legend describe an experiment or not? ##

          ## ANSWER FORMAT: Yes or No.

          ANSWER: Yes

          FIGURE CAPTION: (B) Confocal microscopy of EO771-myr/palm-mCherry cells showing DAPI in blue and mCherry in red, CD9 in green and CD63 in magenta (overlay and close-ups). ##

          ## QUERY: Can you formulate the hypothesis that this experiment has tested. ##

          ## ANSWER FORMAT: One hypothesis per line as in the example: Entity 1 --> Entity 2 \n Entity 3 --> Entity 4.

          ANSWER:
          EO771-myr/palm-mCherry --> CD9
          EO771-myr/palm-mCherry --> CD63

          FIGURE CAPTION: (B) Confocal microscopy of EO771-myr/palm-mCherry cells showing DAPI in blue and mCherry in red, CD9 in green and CD63 in magenta (overlay and close-ups). ##

          ## QUERY: Are there any chemical compounds or small molecules mentioned? ##

          ## ANSWER FORMAT: List of comma separated chemicals. 'None' if no chemical compound or molecule is found.

          ANSWER: DAPI

          FIGURE CAPTION: (e) Violin plots depicting lognormalized readcounts of oocyte-specific genes (Bmp15, Ddx4, Dppa3, Gdf9, Kit, Mos, Nlrp5, Zp3). (5 control animals, n=81 oocytes; 9 STZ animals, n=149 oocytes). ##

          ## QUERY: Can you link the identified genes to their NCBI gene identifiers? ##

          ## ANSWER FORMAT: For each identified gene, generate a line with: 'gene_name': 'NCBI gene identifier'. Return 'None' if no genes are identified.

          ANSWER:
          Bmp15: 9210
          Ddx4: 13206
          Dppa3: 73708
          Gdf9: 14566
          Kit: 16590
          Mos: 17451
          Nlrp5: 23968
          Zp3: 7784

    expected:
      answer:
        3d_sim:
          entity: "Ub (pUb), mitochondria, HSP60"
          intervention: "PINK1, FBXO7"
          context: "cell_type: None \n organism: None \n tissue: None \n cell_line: HeLa \n subcellular: nucleus, mitochondria"
          assay: "3D structured illumination microscopy (3D-SIM)"
          experiment_yes_or_no: "Yes"
          ncbi_link: "PINK1: 65018 \n FBXO7: 25793"
          hypothesis: "PINK1 --> pUb \n FBXO7 --> pUb"
          disease: "None"
          stats: "Two-way ANOVA with multiple comparisons"
          significance: "0.0001"
          chemical: "DAPI"
        flow_cyto:
          entity: "Mean Acidic:Neutral mtKeima per-cell ratios, HeLa, mitochondria"
          intervention: "Antimycin A, Oligomycin, BafilomycinA (BafA)"
          context: "cell_type: None \n organism: None \n tissue: None \n cell_line: HeLa \n subcellular: mitochondria"
          assay: "Flow cytometry"
          experiment_yes_or_no: "Yes"
          ncbi_link: "Parkin: 5071"
          hypothesis: "Antimycin A --> HeLa \n Oligomycin --> HeLa Mean Acidic:Neutral mtKeima per-cell ratios \n BafilomycinA (BafA) --> HeLa Mean Acidic:Neutral mtKeima per-cell ratios"
          disease: "None"
          stats: "Two-way ANOVA with multiple comparisons"
          significance: "0.0001"
          chemical: "Antimycin A, Oligomycin, BafilomycinA "
        western:
          entity: "env, gag"
          intervention: "None"
          context: "cell_type: fibroblast \n organism: None \n tissue: connective \n cell_line: EO771, TS/A, LLC1, KP, B16F10, MCA101, MB49, Raw264.7, 4T1, MutuDC, Pfa1, Mus Dunni \n subcellular: None"
          assay: "Western blot"
          experiment_yes_or_no: "Yes"
          ncbi_link: "None"
          hypothesis: "(EO771, TS/A, LLC1, KP, B16F10, MCA101, MB49, Raw264.7, 4T1, MutuDC, Pfa1, Mus Dunni) --> env \n (EO771, TS/A, LLC1, KP, B16F10, MCA101, MB49, Raw264.7, 4T1, MutuDC, Pfa1, Mus Dunni) --> gag "
          disease: "None mentioned, Murine leukemia"
          stats: "None"
          significance: "None"
          chemical: "None"

kg_schemas:
  gene_kg:
    cell type:
      input_label: cell_type
      is_relationship: false
      preferred_id: cl
      present_in_knowledge_graph: true
      properties:
        cell_type_name: str
        medium: str
        organism: str
      represented_as: node
    disease:
      input_label: Disease
      is_relationship: false
      preferred_id: doid
      present_in_knowledge_graph: true
      properties:
        DSM5: str
        ICD10: str
        name: str
      represented_as: node
    gene:
      exclude_properties: accession
      input_label:
        - hgnc
        - ensg
      is_relationship: false
      preferred_id: hgnc
      present_in_knowledge_graph: true
      properties:
        id: str
        name: str
        taxon: int
      represented_as: node
    gene expressed in cell type:
      input_label: gene_expressed_in_cell_type
      is_a: gene to expression site association
      is_relationship: true
      label_as_edge: GENE_EXPRESSED_IN_CELL_TYPE
      present_in_knowledge_graph: true
      properties:
        expression_level: float
      represented_as: edge
      source: gene
      target: cell type
    gene to disease association:
      input_label: gene_phenotype
      is_relationship: true
      label_as_edge: PERTURBED_IN
      present_in_knowledge_graph: true
      properties:
        evidence: str
        score: float
        source: str
      represented_as: edge
      source: protein
      target: disease
    gene to phenotype association:
      exclude_properties: accession
      input_label:
        - protein_disease
        - gene_disease
      is_relationship: true
      label_as_edge: PERTURBED
      present_in_knowledge_graph: true
      properties:
        evidence: str
        score: float
        source: str
      represented_as: edge
      source: disease
      target:
        - protein
        - gene
    gene to protein association:
      input_label: gene_protein
      is_relationship: true
      present_in_knowledge_graph: true
      properties:
        evidence: str
        score: float
        source: str
      represented_as: edge
      source: gene
      target: protein
    pathway:
      input_label:
        - reactome
        - wikipathways
      is_relationship: false
      preferred_id:
        - reactome
        - wikipathways
      present_in_knowledge_graph: false
      represented_as: node
    phosphorylation:
      input_label: phosphorylation
      is_a: post translational interaction
      is_relationship: true
      present_in_knowledge_graph: true
      represented_as: edge
      source: protein
      target: protein
    post translational interaction:
      input_label: post_translational
      is_a: pairwise molecular interaction
      is_relationship: true
      label_as_edge: INTERACTS_POST_TRANSLATIONAL
      present_in_knowledge_graph: false
      represented_as: node
      source: protein
      target: protein
    protein:
      db_collection_name: proteins
      input_label: protein
      is_relationship: false
      preferred_id: uniprot
      present_in_knowledge_graph: true
      represented_as: node
      properties:
        genes: str[]
        name: str
        score: float
        taxon: int
